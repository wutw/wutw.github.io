<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端分享</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wutw.github.io/"/>
  <updated>2017-10-19T10:52:10.283Z</updated>
  <id>http://wutw.github.io/</id>
  
  <author>
    <name>wtw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DOM类型</title>
    <link href="http://wutw.github.io//404.html"/>
    <id>http://wutw.github.io//404.html</id>
    <published>2017-10-19T06:39:49.000Z</published>
    <updated>2017-10-19T10:52:10.283Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Node-类型："><a href="#1-Node-类型：" class="headerlink" title="1. Node 类型："></a>1. Node 类型：</h3><p> <span style="color:red"><strong>属性</strong></span>有:nodeType, nodeValue ,nodeName节点类型，值、名;<br>                                         childNodes,其中保存着NodeList对象，NodeList对象是一种数组对象，用来保存一组有序节点，可用方括号访问。（childNodes[0] == firstChild）<br>                                          parentNode，指向文档树的父节点,previousSibling,nextSibling属性，可以访问同一列表其它节点,<br>                                          ownerDocument:指向整个文档的文档节点<br>  <span style="color:red"><strong>Node操作</strong></span>：var returnedNode = someNode.appendChild(newNode)//插入到最后一个元素<br>                  <figure class="highlight plain"><figcaption><span>returnedNode </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">  //insertBefore()方法接受两个参数，要插入的节点及作为参考的节点</div><div class="line"> var returnedNode = someNode.insertBefore(newNode，someNode.firstChild);//插入成为第一个子节点</div><div class="line"> var returnedNode = someNode.replaceChild(newNode , someNode.firstChild);//替换第一个子节点</div><div class="line">var returnedNode = someNode.removeChild(newNode , someNode.firstChild);//移除第一个子节点</div></pre></td></tr></table></figure></p><h3 id="2-Document-类型："><a href="#2-Document-类型：" class="headerlink" title="2. Document 类型："></a>2. Document 类型：</h3><p>document对象是HTMLDocument（继承自Document类型）的一个实例，表整个HTML页面<br>Document节点的子节点：DocumentType,Element,Processing，Instruction,Comment<br>  <span style="color:red"><strong>访问子节点属性</strong></span>：documentElement属性，指向html页面中<html>元素<br>                           body属性，指向<body>元素<br>                           doctype属性，对&lt;!DOCTYPE&gt;调用</body></html></p><p> <span style="color:red"><strong>文档信息</strong></span>：document对象有些标准Document对象所没有的属性，有：<br>               title属性，指向<title><br>               URL属性，指向页面链接完整的URL,<br>               domain属性，页面域名<br>                referrer属性，链接到当前页面的URL，<br> <span style="color:red"><strong>查找元素</strong></span>：getElementById(),<br>                   getElementsByTagName(‘img’) //接受一个参数，返回包含0个或多个元素的NodeList，而在html里，会返回一个HtmlCollection对象。（HtmlCollection对象的方法：namedItem(),可以通过元素的name特性取得集合的项）<br>                    getElementsByName()// 只有HTMLDocument类型才有的方法，返回带有给定name特性的所有元素。</title></p><h3 id="3-Element类型-："><a href="#3-Element类型-：" class="headerlink" title="3. Element类型 ："></a>3. Element类型 ：</h3><p>节点的nodeName等于tagNamejstree kb案例.note<br>                             父节点是Element或Document，<br>HTML元素是由HTMLElement或者更具体的子类表示：<br>                    属性：id ,className, title，textContent<br>                html   元素：button，form，body,input等</p><p> <span style="color:red"><strong>特性操作</strong></span></p><p><div id="myDiv"> </div><br>var div = document.getElementById(‘myDiv”);<br><strong>取得特性</strong>：alert(div.getAttribute(“id”));   //id,class CSS类,title附加说明信息,lang,dir语言方向<br><strong>设置特性</strong>：div.setAttribute(“id”,”someOtherId”);<br><strong>删除特性</strong>：div.removeAttribute(“id”);</p><p> <span style="color:red"><strong>attributes属性</strong></span>：Element是使用attributes属性唯一一个DOM节点类型，<br>attributes属性包含一个NameNodeMap对象，该对象有如下方法：<br>    getNamedItem(name):返回nodeName属性等于name的节点，可写成[name]<br>    removeNamedItem(name):移除nodeName属性等于name的节点，相当于removeAttribute（）<br>    setNamedItem(node):向列表添加节点<br>    item(pos)返回位于pos位置处的节点<br>attributes属性包含一系列节点，每个节点的nodeName就是特性的名称，节点的nodeValue就是特性的值，length为节点元素长度<br>  比如 <figure class="highlight plain"><figcaption><span>id </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">**创建元素**：```var  div = document.createElement(&quot;div&quot;);</div></pre></td></tr></table></figure></p><h3 id="4-Text类型："><a href="#4-Text类型：" class="headerlink" title="4. Text类型："></a>4. Text类型：</h3><p>纯文本内容，可包含转义后html字符，不含html代码。<br>                        Text节点parentNode是一个Element，<br><span style="color:red"><strong>创建文本节点</strong></span>：document.createTextNode(”<strong> Hello </strong>“)<br>例：<figure class="highlight plain"><figcaption><span>element  </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> element.className = &quot;message&quot;;//Element属性</div><div class="line"> var textNode = document.createTextNode(&quot;hello world&quot;);//创建Text类型</div><div class="line">element.appendChild(textNode);//插入到div中</div></pre></td></tr></table></figure></p><p>  <code>document.body.appendChild(element);//将div插入到body中</code></p><h3 id="5-Comment类型-："><a href="#5-Comment类型-：" class="headerlink" title="5. Comment类型 ："></a>5. Comment类型 ：</h3><p>注释，parentNode是一个Element或Document</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-Node-类型：&quot;&gt;&lt;a href=&quot;#1-Node-类型：&quot; class=&quot;headerlink&quot; title=&quot;1. Node 类型：&quot;&gt;&lt;/a&gt;1. Node 类型：&lt;/h3&gt;&lt;p&gt; &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;属性&lt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
